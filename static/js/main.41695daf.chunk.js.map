{"version":3,"sources":["assets/images/colour-heist-logo.svg","routes/landing/Landing.tsx","routes/privacy/Privacy.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Landing","className","Privacy","App","routerBaseName","console","log","basename","href","src","logo","alt","exact","path","to","target","rel","Date","getFullYear","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"8GAAAA,EAAOC,QAAU,IAA0B,+C,yPCc5BC,MAXf,WACE,OACE,yBAAKC,UAAU,WAGb,sD,MCuESC,MA5Ef,WACE,OACE,yBAAKD,UAAU,WAEb,8DAEA,wKAGA,yLACA,yJAIA,uBAAGA,UAAU,2BAAb,mCAGA,+LACA,2QAGA,8FAGA,4BACE,4PAKF,yIAGA,uBAAGA,UAAU,2BAAb,4CAGA,oOAGA,uBAAGA,UAAU,2BAAb,qCAIA,6QAGA,0QACA,kOAGA,uBAAGA,UAAU,2BAAb,eAGA,kTAGA,qTAGA,uBAAGA,UAAU,2BAAb,WAGA,oMAGA,uBAAGA,UAAU,2BAAb,cAGA,iLC8BSE,MAzFf,WAEE,IAAMC,EAA+D,0CAGrE,OAFAC,QAAQC,IAAI,iBAAkBF,GAI5B,kBAAC,IAAD,CAAQG,SAAUH,GAChB,yBAAKH,UAAU,OAEb,gCACE,yBAAKA,UAAU,QACf,uBAAGO,KAAK,KAAI,yBAAKC,IAAKC,IAAMT,UAAU,OAAOU,IAAI,kBAC/C,4BACA,uBAAGH,KAAK,KAAR,mBAyCJ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOI,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,YACV,kBAAC,EAAD,QAOJ,gCACE,4BACA,4BAAI,kBAAC,IAAD,CAAMC,GAAIV,EAAiB,WAA3B,QACJ,4BAAI,kBAAC,IAAD,CAAMU,GAAI,WAAV,UACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAI,YAAV,UACF,gCAAK,uBAAGN,KAAK,sBAAsBO,OAAO,SAASC,IAAI,uBAAlD,eACL,4BAAI,uBAAGR,KAAK,YAAR,mBACJ,0CAAiB,IAAIS,MAAOC,cAA5B,yBC1EQC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL/B,QAAQ+B,MAAMA,EAAMC,c","file":"static/js/main.41695daf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/colour-heist-logo.45ab49d3.svg\";","import React from 'react';\nimport './Landing.scss';\n\nfunction Landing() {\n  return (\n    <div className=\"Landing\">\n      \n      \n      <h2>Coming soon for iOS.</h2>\n\n    </div>\n  );\n}\n\nexport default Landing\n","import React from 'react';\nimport './Privacy.scss';\n\nfunction Privacy() {\n  return (\n    <div className=\"Privacy\">\n\n      <h2>EW Digital Ltd. Privacy Policy</h2>\n\n      <p>\n        This Privacy Policy describes how your personal information is collected, used, and shared when you use Colour Heist for iOS (the \"App\").\n\t\t\t\t\t</p>\n      <p>Your privacy is important to us. It is EW Digital Ltd.'s policy to respect your privacy regarding any information we may collect from you through the App.</p>\n      <p>\n        Your continued use of the the App will be regarded as acceptance of our practices around privacy and personal information.\n\t\t\t\t\t</p>\n\n      <p className=\"privacy-section-heading\">\n        PERSONAL INFORMATION WE COLLECT\n\t\t\t\t\t</p>\n      <p>We only ask for personal information when we truly need it to provide a service to you. We collect it by fair and lawful means, with your knowledge and consent.</p>\n      <p>\n        When you use the App, we automatically collect certain information about your device, including information about your web browser, IP address, and time zone. We refer to this automatically-collected information as \"Device Information.\"\n\t\t\t\t\t</p>\n      <p>\n        We collect Device Information using the following technologies:\n\t\t\t\t\t</p>\n      <ul>\n        <li>\n          \"Cookies\" are data files that are placed on your device or computer and often include an anonymous unique identifier. For more information about cookies, and how to disable cookies, visit http://www.allaboutcookies.org.\n\t\t\t\t\t\t</li>\n      </ul>\n      \n      <p>\n        When we talk about \"Personal Information\" in this Privacy Policy, we are talking about Device Information.\n\t\t\t\t\t</p>\n      <p className=\"privacy-section-heading\">\n        HOW DO WE USE YOUR PERSONAL INFORMATION?\n\t\t\t\t\t</p>\n      <p>\n        We use the Device Information that we collect to help us screen for potential risk and fraud (in particular, your IP address), and to assess the success of our marketing and advertising campaigns).\n\t\t\t\t\t</p>\n      <p className=\"privacy-section-heading\">\n\n        SHARING YOUR PERSONAL INFORMATION\n\t\t\t\t\t</p>\n      <p>\n        We only share your Personal Information with third parties to help us use your Personal Information, as described above.  For example, we use Auth0 to handle our authentication--you can learn more about how Auth0 here: https://auth0.com/.\n\t\t\t\t\t</p>\n      <p>The App may link to external sites that are not operated by us. Please be aware that we have no control over the content and practices of these sites, and cannot accept responsibility or liability for their respective privacy policies.</p>\n      <p>\n        Finally, we may also share your Personal Information to comply with applicable laws and regulations, to respond to a lawful request for information we receive, or to otherwise protect our rights.\n\t\t\t\t\t</p>\n      <p className=\"privacy-section-heading\">\n        YOUR RIGHTS\n\t\t\t\t\t</p>\n      <p>\n        If you are a European resident, you have the right to access personal information we hold about you and to ask that your personal information be corrected, updated, or deleted. If you would like to exercise this right, please contact us through the contact information below.\n\t\t\t\t\t</p>\n      <p>\n        Additionally, if you are a European resident we note that we are processing your information in order to provide a service to you, and to pursue our legitimate business interests listed above. Additionally, please note that your information may be transferred outside of Europe.\n\t\t\t\t\t</p>\n      <p className=\"privacy-section-heading\">\n        CHANGES\n\t\t\t\t\t</p>\n      <p>\n        We may update this privacy policy from time to time in order to reflect, for example, changes to our practices or for other operational, legal or regulatory reasons.\n\t\t\t\t\t</p>\n      <p className=\"privacy-section-heading\">\n        CONTACT US\n\t\t\t\t\t</p>\n      <p>\n        For more information about our privacy practices, or if you have questions or comments, please contact us by e-mail at colourhiest@madebyew.com.\n\t\t\t\t\t</p>\n\n    </div>\n  );\n}\n\nexport default Privacy\n","import React from 'react';\nimport logo from './assets/images/colour-heist-logo.svg';\nimport './App.scss';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Landing from './routes/landing/Landing';\nimport Privacy from './routes/privacy/Privacy';\n\nfunction App() {\n\n  const routerBaseName = process.env.NODE_ENV === 'development' ? '' : 'https://madebyew.github.io/colour-heist'; // : process.env.PUBLIC_URL;\n  console.log('routerBaseName', routerBaseName);\n  \n  return (\n\n    <Router basename={routerBaseName}>\n      <div className=\"App\">\n\n        <header>\n          <div className='logo'>\n          <a href=\"/\"><img src={logo} className=\"logo\" alt=\"Colour Heist\" /></a>\n            <h1>\n            <a href=\"/\">Colour Heist</a>\n            </h1>\n          </div>\n          {/* <nav className='nav'>\n            <ul>\n              <li>\n                <Link to=\"/\">About</Link>\n              </li>\n              <li>\n                <Link to=\"/privacy\">Privacy</Link>\n              </li>\n            </ul>\n          </nav> */}\n        </header>\n\n\n\n\n        {/* <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.tsx</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header> */}\n\n\n        {/*\n          A <Switch> looks through all its children <Route>\n          elements and renders the first one whose path\n          matches the current URL. Use a <Switch> any time\n          you have multiple routes, but you want only one\n          of them to render at a time\n        */}\n        <Switch>\n          <Route exact path=\"/\">\n            <Landing />\n          </Route>\n          <Route path=\"/privacy\">\n            <Privacy />\n          </Route>\n        </Switch>\n\n\n\n\n        <footer>\n          <ul>\n          <li><Link to={routerBaseName + 'privacy'}>Pri</Link></li>\n          <li><Link to={'privacy'}>Pri 2</Link></li>\n          <li><Link to={'/privacy'}>Pri 3</Link></li>\n            <li> <a href=\"http://madebyew.com\" target=\"_blank\" rel=\"noopener noreferrer\">Made by EW</a></li>\n            <li><a href=\"/privacy\">Privacy Policy</a></li>\n            <li>&copy; 2019-{new Date().getFullYear()} EW Digital Ltd.</li>\n          </ul>\n        </footer>\n\n\n\n\n      </div>\n    </Router>\n\n\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}